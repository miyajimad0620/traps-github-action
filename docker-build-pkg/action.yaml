# Copyright 2024 TRAPS

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: docker-build-pkg
description: Build Docker Image for package and push to ghcr.io

inputs:
  token:
    description: GitHub Token
    required: false
    default: ${{ github.token }}
  package-path:
    description: Path of package
    required: false
    default: ${{ github.event.repository.name }}
  repos-file:
    description: Path of .repos file
    required: false
    default: "*.repos"
  platforms:
    description: Docker Image platform (comma separation)
    required: false
    default: linux/amd64, linux/arm64/v8
  builder-base-image:
    description: Docker Image for build
    required: false
    default: ubuntu:latest
  executor-base-image:
    description: Docker Image for execute
    required: false
    default: ubuntu:latest
  build-depends-install-script:
    description: Script to install build dependencies
    required: false
    default: ""
    # default: >
    #   apt-get update &&
    #   apt-get install -y --no-install-recommends ...  &&
    #   apt-get clean && rm -rf /var/lib/apt/lists/*
  pre-build-script:
    description: Script to run before build
    required: false
    default: ""
  build-options:
    description: Options for build
    required: false
    default: "--merge-install --executor sequential --cmake-args -DCMAKE-BUILD-TYPE=Release"
  post-build-script:
    description: Script to run after build
    required: false
    default: ""
  exec-depends-install-script:
    description: Script to install execute dependencies
    required: false
    default: ""
    # default: >
    #   apt-get update &&
    #   apt-get install -y --no-install-recommends ...  &&
    #   apt-get clean && rm -rf /var/lib/apt/lists/*
  

runs:
  using: composite
  steps:
  - name: Checkout
    uses: actions/checkout@v4
    with:
      path: src/${{ inputs.package-path }}

  - name: Cache APT packages
    uses: actions/cache@v4
    with:
      path: /var/cache/apt/archives
      key: apt-cache-${{ runner.os }}
      restore-keys: |
        apt-cache-
  
  - name: Install VCS tool
    run: |
      curl -s https://packagecloud.io/install/repositories/dirk-thomas/vcstool/script.deb.sh | sudo bash
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends python3-vcstool
    shell: bash
  
  - name: Vcs import
    id: vcs-import
    run: |
      for REPOS_FILE in src/${{ inputs.package-path }}/${{ inputs.repos-file }}; do
        if [ ! -f ${REPOS_FILE} ]; then continue; fi
        vcs import src < "${REPOS_FILE}"
      done
    shell: bash

  - name: Login to GitHub Container Registry
    uses: docker/login-action@v3
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ github.token }}
      logout: false

  - name: Set up QEMU
    uses: docker/setup-qemu-action@v3
    with:
      platforms: ${{ inputs.platforms }}

  - name: Set up Docker Buildx
    id: set-docker-builder
    uses: docker/setup-buildx-action@v3
    with:
      platforms: ${{ inputs.platforms }}

  - name: Extract metadata (tags, labels) for Docker (builder)
    id: set-docker-metadata-builder
    uses: docker/metadata-action@v5
    with:
      images: ghcr.io/${{ github.repository }}/builder

  - name: Build and push (builder)
    uses: docker/build-push-action@v5
    with:
      target: builder
      context: .
      file: ${{ github.action_path }}/Dockerfile
      push: true
      tags: ${{ steps.set-docker-metadata-builder.outputs.tags }}
      labels: ${{ steps.set-docker-metadata-builder.outputs.labels }}
      build-args: |
        BUILDER_BASE_IMAGE=${{ inputs.builder-base-image }}
        EXECUTOR_BASE_IMAGE=${{ inputs.executor-base-image }}
        BUILD_DEPENDS_INSTALL_SCRIPT=${{ inputs.build-depends-install-script }}
        PRE_BUILD_SCRIPT=${{ inputs.pre-build-script }}
        BUILD_OPTIONS=${{ inputs.build-options }}
        POST_BUILD_SCRIPT=${{ inputs.post-build-script }}
        EXEC_DEPENDS_INSTALL_SCRIPT=${{ inputs.exec-depends-install-script }}
      platforms: ${{ inputs.platforms }}
      builder: ${{ steps.set-docker-builder.outputs.name }}
      cache-from: type=gha
      cache-to: type=gha, mode=max

  - name: Extract metadata (tags, labels) for Docker (exdecutor)
    id: set-docker-metadata-executor
    uses: docker/metadata-action@v5
    with:
      images: |
        ghcr.io/${{ github.repository }}/executor
        ghcr.io/${{ github.repository }}

  - name: Build and push (builder)
    uses: docker/build-push-action@v5
    with:
      target: executor
      context: .
      file: ${{ github.action_path }}/Dockerfile
      push: true
      tags: ${{ steps.set-docker-metadata-executor.outputs.tags }}
      labels: ${{ steps.set-docker-metadata-executor.outputs.labels }}
      build-args: |
        BUILDER_BASE_IMAGE=${{ inputs.builder-base-image }}
        EXECUTOR_BASE_IMAGE=${{ inputs.executor-base-image }}
        BUILD_DEPENDS_INSTALL_SCRIPT=${{ inputs.build-depends-install-script }}
        PRE_BUILD_SCRIPT=${{ inputs.pre-build-script }}
        BUILD_OPTIONS=${{ inputs.build-options }}
        POST_BUILD_SCRIPT=${{ inputs.post-build-script }}
        EXEC_DEPENDS_INSTALL_SCRIPT=${{ inputs.exec-depends-install-script }}
      platforms: ${{ inputs.platforms }}
      builder: ${{ steps.set-docker-builder.outputs.name }}
      cache-from: type=gha
      cache-to: type=gha, mode=max