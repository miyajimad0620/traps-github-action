# Copyright 2024 TRAPS

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: docker-build-ros2-pkg
description: Build Docker Image for ROS2 package and push to ghcr.io

inputs:
  token:
    description: GitHub Token
    required: false
    default: ${{ github.token }}
  platforms:
    description: Docker Image platform (comma separation)
    required: false
    default: linux/amd64, linux/arm64/v8
  rosdistro:
    description: ROS distribution (lowercase)
    required: false
    default: humble

runs:
  using: composite
  steps:
  - name: Login to GitHub Container Registry
    uses: docker/login-action@v3
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ github.token }}
      logout: false

  - name: Set up QEMU
    uses: docker/setup-qemu-action@v3
    with:
      platforms: ${{ inputs.platforms }}

  - name: Set up Docker Buildx
    id: set-docker-builder
    uses: docker/setup-buildx-action@v3
    with:
      platforms: ${{ inputs.platforms }}

  - name: Make temp dir
    id: make-temp-dir
    run: echo "path=$(mktemp -d ${{ github.workspace }}/tmp.XXXXXX)" >> $GITHUB_OUTPUT
    shell: bash
  
  - name: Checkout
    uses: actions/checkout@v4
    with:
      token: ${{ inputs.token }}
      path: ${{ steps.make-temp-dir.outputs.path }}
      fetch-depth: 0

  - name: Get depend chenged sha
    working-directory: ${{ steps.make-temp-dir.outputs.path }}
    id: get-depend-changed
    run: echo "sha=$(git log -n 1 --pretty=format:"%H" -- $(git ls-files '*.repos' package.xml))" >> $GITHUB_OUTPUT
    shell: bash

  - name: Extract metadata (tags, labels) for Docker (depends only)
    id: set-docker-metadata-depends-only
    uses: docker/metadata-action@v5
    with:
      images: ghcr.io/${{ github.repository }}/depends_only

  - name: Extract metadata (tags, labels) for Docker (depends only) (sha)
    id: set-docker-metadata-depends-only-sha
    uses: docker/metadata-action@v5
    with:
      images: ghcr.io/${{ github.repository }}/depends_only
      tags: sha-${{ steps.get-depend-changed.outputs.sha }}

  - name: Check depends-only image exist
    id: check-depends-only-image
    run: |
      if docker manifest inspect ${{ steps.set-docker-metadata-depends-only-sha.outputs.tags }} > /dev/null 2>&1;
      then
        echo "exist=true" >> $GITHUB_OUTPUT
      else
        echo "exist=false" >> $GITHUB_OUTPUT
      fi
    shell: bash

  - name: Build and push (depends only)
    # if: ${{ steps.check-depends-only-image.outputs.exist != 'true' }}
    uses: docker/build-push-action@v5
    with:
      context: ${{ github.action_path }}/depends-only
      file: ${{ github.action_path }}/depends-only/Dockerfile
      push: true
      tags: |
        ${{ steps.set-docker-metadata-depends-only.outputs.tags }}
        ${{ steps.set-docker-metadata-depends-only-sha.outputs.tags }}
      labels: |
        ${{ steps.set-docker-metadata-depends-only.outputs.labels }}
        ${{ steps.set-docker-metadata-depends-only-sha.outputs.labels }}
      build-args: |
        ROS_DISTRO=${{ inputs.rosdistro }}
        GIT_REMOTE_URL=https://github.com/${{ github.repository }}.git
        GIT_SHA=${{ steps.get-depend-changed.outputs.sha }}
        PRE_IMPORT_SCRIPT=git config --global url.https://${{ inputs.token }}@github.com.insteadOf https://github.com
      platforms: ${{ inputs.platforms }}
      builder: ${{ steps.set-docker-builder.outputs.name }}
      cache-from: type=gha
      cache-to: type=gha, mode=max

  - name: Extract metadata (tags, labels) for Docker
    id: set-docker-metadata
    uses: docker/metadata-action@v5
    with:
      images: ghcr.io/${{ github.repository }}

  - name: Build and push
    uses: docker/build-push-action@v5
    with:
      context: ${{ github.action_path }}
      file: ${{ github.action_path }}/Dockerfile
      push: true
      tags: ${{ steps.set-docker-metadata.outputs.tags }}
      labels: ${{ steps.set-docker-metadata.outputs.labels }}
      build-args: |
        BASE_IMAGE=${{ steps.set-docker-metadata-depends-only-sha.outputs.tags }}
        ENTRYPOINT_FILE=ros_ws_entrypoint.sh
        GIT_REMOTE_URL=https://github.com/${{ github.repository }}.git
        GIT_SHA=${{ github.sha }}
        PRE_IMPORT_SCRIPT=git config --global url.https://${{ inputs.token }}@github.com.insteadOf https://github.com
      platforms: ${{ inputs.platforms }}
      builder: ${{ steps.set-docker-builder.outputs.name }}
      cache-from: type=gha
      cache-to: type=gha, mode=max